pub fn to_key(key: &String) -> Option<rdev::Key> {
    // Match keys to an enum value

    match key.as_str() {
        "Return" => return Some(rdev::Key::Return),
        "1" => return Some(rdev::Key::Num1),
        "2" => return Some(rdev::Key::Num2),
        "3" => return Some(rdev::Key::Num3),
        "4" => return Some(rdev::Key::Num4),
        "5" => return Some(rdev::Key::Num5),
        "6" => return Some(rdev::Key::Num6),
        "7" => return Some(rdev::Key::Num7),
        "8" => return Some(rdev::Key::Num8),
        "9" => return Some(rdev::Key::Num9),
        "0" => return Some(rdev::Key::Num0),
        "a" => return Some(rdev::Key::KeyA),
        "b" => return Some(rdev::Key::KeyB),
        "c" => return Some(rdev::Key::KeyC),
        "d" => return Some(rdev::Key::KeyD),
        "e" => return Some(rdev::Key::KeyE),
        "f" => return Some(rdev::Key::KeyF),
        "g" => return Some(rdev::Key::KeyG),
        "h" => return Some(rdev::Key::KeyH),
        "i" => return Some(rdev::Key::KeyI),
        "j" => return Some(rdev::Key::KeyJ),
        "k" => return Some(rdev::Key::KeyK),
        "l" => return Some(rdev::Key::KeyL),
        "m" => return Some(rdev::Key::KeyM),
        "n" => return Some(rdev::Key::KeyN),
        "o" => return Some(rdev::Key::KeyO),
        "p" => return Some(rdev::Key::KeyP),
        "q" => return Some(rdev::Key::KeyQ),
        "r" => return Some(rdev::Key::KeyR),
        "s" => return Some(rdev::Key::KeyS),
        "t" => return Some(rdev::Key::KeyT),
        "u" => return Some(rdev::Key::KeyU),
        "v" => return Some(rdev::Key::KeyV),
        "w" => return Some(rdev::Key::KeyW),
        "x" => return Some(rdev::Key::KeyX),
        "y" => return Some(rdev::Key::KeyY),
        "z" => return Some(rdev::Key::KeyZ),
        other => panic!("Not know key: {}", other),
    };
}
